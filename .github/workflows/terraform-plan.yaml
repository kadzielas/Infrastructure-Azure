name: "Terraform Plan"
run-name: >
  Checking terraform modules structure
    pulled by @${{ github.actor}}
    to branch @${{ github.ref_name}}
on:
  push:
    branches:
      - test
      - main
  pull_request:
    branches:
      - test
      - main
jobs:
  verification:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.12.0

      - name: Terraform format check
        run: terraform fmt -check -recursive

      - name: Terraform validate
        run: terraform validate -no-color

      - name: Version control
        run: terraform version -json

  tfsec-vailidation:
    name: Run tfsec
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Clone repo
        uses: actions/checkout@master

      - name: tfsec
        uses: tfsec/tfsec-sarif-action@main
        with:
          sarif_file: tfsec.sarif

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: tfsec.sarif

  terraform-plan:
    name: Run Terraform Plan
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Initialize Terraform
        run: terraform init -input=false -no-color

      - name: Run Terraform Plan
        run: terraform plan -out=tfplan -input=false -no-color

      - name: Upload Terraform Plan
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
